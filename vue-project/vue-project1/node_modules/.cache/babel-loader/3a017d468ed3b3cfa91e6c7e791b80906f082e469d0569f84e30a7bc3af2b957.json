{"ast":null,"code":"import topNavigator from \"./firstPage/topNavigator.vue\";\nimport mainFooter from \"./firstPage/mainFooter.vue\";\nexport default {\n  data() {\n    return {\n      context: []\n    };\n  },\n  mounted() {\n    // update context with initial data\n    this.updateContext();\n  },\n  methods: {\n    updateContext() {\n      // update context with new data\n      console.log('Updating context...');\n      this.context = document.searchLists;\n    }\n  },\n  watch: {\n    // watch for changes to searchLists and update context when necessary\n    '$root.$data.searchLists': function () {\n      this.updateContext();\n    }\n  },\n  // set the key to the current search keyword\n  // this will force the component to be re-mounted when the search keyword changes\n  // and the mounted() hook will be called again to update the context\n  key: function () {\n    return this.$route.query.keyword;\n  },\n  components: {\n    topNavigator,\n    mainFooter\n  }\n};","map":{"version":3,"names":["topNavigator","mainFooter","data","context","mounted","updateContext","methods","console","log","document","searchLists","watch","$root.$data.searchLists","key","$route","query","keyword","components"],"sources":["C:\\Users\\xuz21\\OneDrive\\Desktop\\2023 spring\\CSC331\\vueFrame\\vue-project\\vue-project1\\src\\components\\searchPage.vue"],"sourcesContent":["<template>\r\n    <topNavigator />\r\n    <div class=\"wrapper\">\r\n      <div class=\"whiteboard\">\r\n        <h2>Group lists</h2>\r\n        <ul>\r\n        <li v-for=\"(group, index) in context\" :key=\"index\">{{ group }}</li>\r\n      </ul>\r\n      </div>\r\n    </div>\r\n    <mainFooter />\r\n  </template>\r\n  \r\n    \r\n  <script>\r\n  import topNavigator from \"./firstPage/topNavigator.vue\"\r\n  import mainFooter from \"./firstPage/mainFooter.vue\"\r\n  \r\n  export default {\r\n\r\n\r\n    data() {\r\n      return {\r\n        context: [],\r\n      };\r\n    },\r\n\r\n    mounted() {\r\n      // update context with initial data\r\n      this.updateContext();\r\n    },\r\n\r\n    methods: {\r\n      updateContext() {\r\n        // update context with new data\r\n        console.log('Updating context...');\r\n        this.context = document.searchLists;\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      // watch for changes to searchLists and update context when necessary\r\n      '$root.$data.searchLists': function () {\r\n        this.updateContext();\r\n      },\r\n    },\r\n\r\n    // set the key to the current search keyword\r\n    // this will force the component to be re-mounted when the search keyword changes\r\n    // and the mounted() hook will be called again to update the context\r\n    key: function () {\r\n      return this.$route.query.keyword;\r\n    },\r\n  \r\n    components: {\r\n      topNavigator,\r\n      mainFooter\r\n    }\r\n  };\r\n  </script>\r\n    \r\n  <style scoped>\r\n  .wrapper{\r\n    height: 800px;\r\n    width: 100%;\r\n  }\r\n\r\n  .wrapper .whiteboard{\r\n    height: 600px;\r\n    width: 50%;\r\n    margin: 150px auto;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  .whiteboard h2{\r\n    margin-bottom: 20px;\r\n    /* top: 20px; */\r\n  }\r\n  </style>\r\n    "],"mappings":"AAeE,OAAOA,YAAW,MAAO,8BAA6B;AACtD,OAAOC,UAAS,MAAO,4BAA2B;AAElD,eAAe;EAGbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,aAAa,EAAE;EACtB,CAAC;EAEDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACd;MACAE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAI,CAACL,OAAM,GAAIM,QAAQ,CAACC,WAAW;IACrC;EACF,CAAC;EAEDC,KAAK,EAAE;IACL;IACA,yBAAyB,EAAE,SAAAC,CAAA,EAAY;MACrC,IAAI,CAACP,aAAa,EAAE;IACtB;EACF,CAAC;EAED;EACA;EACA;EACAQ,GAAG,EAAE,SAAAA,CAAA,EAAY;IACf,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO;EAClC,CAAC;EAEDC,UAAU,EAAE;IACVjB,YAAY;IACZC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}